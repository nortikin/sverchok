{
  "export_version": "0.079",
  "framed_nodes": {
    "Evaluate Curve": "Frame",
    "Formula": "Frame.001",
    "Formula.001": "Frame.001",
    "Note.001": "Frame",
    "Objects in Lite": "Frame.002",
    "Polyline Viewer.001": "Frame.002",
    "Scalar Math": "Frame.001",
    "Scripted Node Lite": "Frame",
    "Vector out": "Frame.001"
  },
  "groups": {},
  "nodes": {
    "Evaluate Curve": {
      "bl_idname": "SvExEvalCurveNode",
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        -274.1788024902344,
        -199.6656036376953
      ],
      "params": {
        "eval_mode": "AUTO",
        "sample_size": 200
      },
      "width": 140.0
    },
    "Formula": {
      "bl_idname": "SvFormulaNodeMk3",
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        542.0409736633301,
        -174.8642578125
      ],
      "params": {
        "formula1": "x if y>-7 else 1.5-abs(y)**1.8/40"
      },
      "width": 231.4080810546875
    },
    "Formula.001": {
      "bl_idname": "SvFormulaNodeMk3",
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        167.59436416625977,
        -182.6143798828125
      ],
      "params": {
        "formula1": "abs(z)/10"
      },
      "width": 140.0
    },
    "Frame": {
      "bl_idname": "NodeFrame",
      "height": 252.3343963623047,
      "hide": false,
      "label": "generator",
      "location": [
        -30.0,
        10.0
      ],
      "params": {},
      "width": 807.350341796875
    },
    "Frame.001": {
      "bl_idname": "NodeFrame",
      "height": 210.1357421875,
      "hide": false,
      "label": "twist",
      "location": [
        20.784564971923828,
        84.29751586914062
      ],
      "params": {},
      "width": 859.5928344726562
    },
    "Frame.002": {
      "bl_idname": "NodeFrame",
      "height": 405.5419921875,
      "hide": false,
      "label": "bevel object",
      "location": [
        86.11196899414062,
        -1.1232242584228516
      ],
      "params": {},
      "width": 392.3338623046875
    },
    "Note": {
      "bl_idname": "NoteNode",
      "color": [
        1.0,
        0.8993440270423889,
        0.9742509722709656
      ],
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        -882.0178833007812,
        -16.087749481201172
      ],
      "params": {
        "show_text": 0,
        "text": "Nikitron 2020 | Toe revange from radiation dust . SNL implemented generator. Input letters l r t as in this example and create new toes. Schema was taken from Russian magazine 'Nauka i gizn''."
      },
      "use_custom_color": true,
      "width": 400.0
    },
    "Note.001": {
      "bl_idname": "NoteNode",
      "color": [
        1.0,
        0.8993440270423889,
        0.9742509722709656
      ],
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        -881.5291748046875,
        -205.29336547851562
      ],
      "params": {
        "text": "l r r l r t"
      },
      "use_custom_color": true,
      "width": 400.0
    },
    "Objects in Lite": {
      "bl_idname": "SvObjInLite",
      "color": [
        0.904932975769043,
        1.0,
        0.883421003818512
      ],
      "geom": "{\"Vertices\": [-1.2019426822662354, 0.0, 0.0, -1.0447529554367065, 0.1184345930814743, 0.0, -0.8746780753135681, 0.22233791649341583, 0.0, -0.6932308077812195, 0.3096092939376831, 0.0, -0.5019239187240601, 0.37814801931381226, 0.0, -0.30227020382881165, 0.4258534014225006, 0.0, -0.09578245878219604, 0.4506247639656067, 0.0, 0.11602653563022614, 0.450361430644989, 0.0, 0.3316439986228943, 0.4229626953601837, 0.0, 0.549557089805603, 0.36632785201072693, 0.0, 0.7682530879974365, 0.2783562242984772, 0.0, 0.9862191677093506, 0.15694713592529297, 0.0, 1.2019426822662354, 0.0, 0.0], \"Edges\": [0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12], \"Polygons\": [], \"MaterialIdx\": [], \"Matrix\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -2.6762638092041016, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]}",
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        441.4773254394531,
        -436.4497318267822
      ],
      "params": {
        "currently_storing": 1,
        "modifiers": 0,
        "obj_name": "BezierCurve"
      },
      "use_custom_color": true,
      "width": 140.0
    },
    "Polyline Viewer": {
      "bl_idname": "SvPolylineViewerNodeV28",
      "color": [
        0.6284880042076111,
        0.931007981300354,
        1.0
      ],
      "custom_socket_props": {
        "4": {
          "object_kinds": "CURVE"
        }
      },
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        849.6615600585938,
        18.201631546020508
      ],
      "params": {
        "basedata_name": "Alpha",
        "bspline": 1,
        "caps": 0,
        "close": 0,
        "curve_dimensions": "3D",
        "depth": 0.8299999833106995,
        "grouping": 1,
        "preview_resolution_u": 3,
        "radii": 0.3199999928474426,
        "resolution": 4,
        "selected_mode": "Single",
        "show_wire": 0,
        "twist": -45.5099983215332,
        "use_auto_uv": 1,
        "use_smooth": 1
      },
      "use_custom_color": true,
      "width": 140.0
    },
    "Polyline Viewer.001": {
      "bl_idname": "SvPolylineViewerNodeV28",
      "color": [
        0.6284880042076111,
        0.931007981300354,
        1.0
      ],
      "custom_socket_props": {
        "4": {
          "object_kinds": "CURVE"
        }
      },
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        633.8111877441406,
        -420.4580020904541
      ],
      "params": {
        "basedata_name": "Gamma",
        "bspline": 0,
        "close": 0,
        "curve_dimensions": "2D",
        "depth": 0.0,
        "object_hide_viewport": 1,
        "object_select": 1,
        "radii": 0.0,
        "selected_mode": "Single",
        "twist": 0.0,
        "use_smooth": 0
      },
      "use_custom_color": true,
      "width": 140.0
    },
    "Scalar Math": {
      "bl_idname": "SvScalarMathNodeMK4",
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        365.76933670043945,
        -177.04129028320312
      ],
      "params": {
        "current_op": "MAX",
        "y_": 0.3700000047683716
      },
      "width": 140.0
    },
    "Scripted Node Lite": {
      "bl_idname": "SvScriptNodeLite",
      "color": [
        0.0,
        0.800000011920929,
        0.949999988079071
      ],
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        -448.7362060546875,
        -205.78904724121094
      ],
      "params": {
        "halt_updates": 0,
        "inject_params": 0,
        "injected_state": 0,
        "script_name": "Text",
        "script_str": "from sverchok.utils.geom import LinearSpline, CubicSpline\nfrom sverchok.utils.math import supported_metrics\nfrom sverchok.utils.curve import SvSplineCurve\n\n\"\"\"\nin numbr s d=[[]] n=0\nout splin C\nout verts v\n\"\"\"\n\n# '''use note node to define toe\n# l - left, r - right, t - top,\n# bake, convert to curve and\n# extrude 0.3\n# Start always from l finish with t\n# and finish inside out\n# use live_curve script \n# to materialize curve to tie\n# Nikitron, 2014'''\n\n\nout = [ \n        (0, 0.2, -5),\n        (0, 0.2, -3),\n        (0, 0.2, 0),\n        (1, 0.2, 1),\n        (3, 5, 2),\n        (0, 7, 2),\n        (-3, 5, 2),\n        (-1, 0.5, 1) ]\nfront = True\n\nvecs = [(0.8660254037844386, 0.0, -0.5),\n        (0,0,1),\n        (-0.8660254037844386, 0.0, -0.5)]\nif numbr:\n    n_ = numbr[0][0].split(' ')\n    print('default letters:  ',n_)\n    for k, i in enumerate(n_):\n        if i[0] == 'l':\n            i = 0\n        elif i[0] == 't':\n            i = 1\n        elif i[0] == 'r':\n            i = 2\n        v = vecs[i]\n        if front:\n            front = False\n            y1 = -0.015\n            y2 = 0.015\n        else:\n            front = True\n            y1 = 0.015\n            y2 = -0.015\n        out.append([v[0]*k*0.05+v[0],\n                    y1*(k+1),\n                    v[2]*k*0.05+v[2]])\n        out.append([v[0]*k*0.05+v[0],\n                    y2*(k+1),\n                    v[2]*k*0.05+v[2]])\n    out.extend([\n            (0, -0.4,-1),\n            (0, -0.2,-3),\n            (0, 0,-10)])\n\nspline = CubicSpline(out, metric = 'CHEBYSHEV', is_cyclic = False)\ncurve = SvSplineCurve(spline)\nverts=[out]\n\nsplin = [curve]\n"
      },
      "snlite_ui": [],
      "use_custom_color": true,
      "width": 140.0
    },
    "Vector out": {
      "bl_idname": "VectorsOutNode",
      "height": 100.0,
      "hide": false,
      "label": "",
      "location": [
        -26.14376449584961,
        -182.49008178710938
      ],
      "params": {},
      "width": 140.0
    }
  },
  "update_lists": [
    [
      "Note.001",
      0,
      "Scripted Node Lite",
      0
    ],
    [
      "Scripted Node Lite",
      0,
      "Evaluate Curve",
      0
    ],
    [
      "Evaluate Curve",
      0,
      "Vector out",
      0
    ],
    [
      "Vector out",
      2,
      "Formula.001",
      0
    ],
    [
      "Formula.001",
      0,
      "Scalar Math",
      0
    ],
    [
      "Scalar Math",
      0,
      "Formula",
      0
    ],
    [
      "Vector out",
      2,
      "Formula",
      1
    ],
    [
      "Objects in Lite",
      0,
      "Polyline Viewer.001",
      0
    ],
    [
      "Evaluate Curve",
      0,
      "Polyline Viewer",
      0
    ],
    [
      "Formula",
      0,
      "Polyline Viewer",
      2
    ],
    [
      "Polyline Viewer.001",
      0,
      "Polyline Viewer",
      4
    ]
  ]
}